#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–æ–≤
–±–µ–∑ –ø–æ–ª—è files –∏–ª–∏ —Å —Ñ–∞–π–ª–∞–º–∏, –Ω–µ —Ç—Ä–µ–±—É—é—â–∏–º–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
"""
from main import process_response_data
import json

def test_preserve_original_response():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –æ—Ç–≤–µ—Ç—ã –±–µ–∑ –ø–æ–ª—è files –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –±–µ–∑ –ø–æ–ª—è files (–∫–∞–∫ /pipelines endpoint)
    original_response = '{"status":"success","data":[{"id":"1","name":"pipeline1"},{"id":"2","name":"pipeline2"}]}'
    
    print(f"üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(original_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {original_response}")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –Ω–∞—à –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
    processed_response = process_response_data(original_response)
    
    print(f"üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(processed_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {processed_response}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã
    if original_response == processed_response:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –æ—Ç–≤–µ—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")
        return True
    else:
        print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: –æ—Ç–≤–µ—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è")
        print(f"–†–∞–∑–Ω–∏—Ü–∞ –≤ —Ä–∞–∑–º–µ—Ä–µ: {len(processed_response) - len(original_response)} —Å–∏–º–≤–æ–ª–æ–≤")
        return False

def test_preserve_response_with_empty_files():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º files
    """
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º files...")
    
    original_response = '{"uuid":"test","status":"success","result":{"files":[],"censored":false}}'
    
    print(f"üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(original_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    processed_response = process_response_data(original_response)
    
    print(f"üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(processed_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    if original_response == processed_response:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –æ—Ç–≤–µ—Ç —Å –ø—É—Å—Ç—ã–º files –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")
        return True
    else:
        print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: –æ—Ç–≤–µ—Ç —Å –ø—É—Å—Ç—ã–º files –∏–∑–º–µ–Ω–∏–ª—Å—è")
        return False

def test_response_formatting_preservation():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è JSON
    """
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è JSON...")
    
    # JSON —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    original_response = '{ "status" : "success" , "data" : [ { "id" : "1" } ] }'
    
    print(f"üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(original_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìÑ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {repr(original_response)}")
    
    processed_response = process_response_data(original_response)
    
    print(f"üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(processed_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"üìÑ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {repr(processed_response)}")
    
    if original_response == processed_response:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
        return True
    else:
        print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å")
        return False

def test_response_with_image_conversion():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ—Ç–≤–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
    """
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π base64 –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    fake_png_base64 = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg=="
    
    original_response = f'{{"uuid":"test","status":"success","result":{{"files":["{fake_png_base64}"],"censored":false}}}}'
    
    print(f"üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(original_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    processed_response = process_response_data(original_response)
    
    print(f"üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {len(processed_response)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    if original_response != processed_response:
        print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –æ—Ç–≤–µ—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
        try:
            original_data = json.loads(original_response)
            processed_data = json.loads(processed_response)
            
            if (original_data['uuid'] == processed_data['uuid'] and
                original_data['status'] == processed_data['status']):
                print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
                return True
            else:
                print("‚ùå –°—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON –Ω–∞—Ä—É—à–µ–Ω–∞")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON: {e}")
            return False
    else:
        print("‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: –æ—Ç–≤–µ—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        return False

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –æ—Ç–≤–µ—Ç–æ–≤\n")
    
    tests_passed = 0
    total_tests = 4
    
    if test_preserve_original_response():
        tests_passed += 1
    
    if test_preserve_response_with_empty_files():
        tests_passed += 1
        
    if test_response_formatting_preservation():
        tests_passed += 1
        
    if test_response_with_image_conversion():
        tests_passed += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {tests_passed}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if tests_passed == total_tests:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
        
    print("\nüí° –¢–µ–ø–µ—Ä—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")
    print("   –∫–æ–≥–¥–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.") 